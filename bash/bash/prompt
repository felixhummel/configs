#!/bin/bash
# shellcheck disable=SC1087,SC2034,SC2053,SC2063,SC2086,SC2155,SC2181

# https://github.com/termstandard/colors#terminal-colors
# https://raw.githubusercontent.com/JohnMorales/dotfiles/master/colors/24-bit-color.sh
_color_hex2rgb() {
    rgb=$1
    echo "$((16#${rgb:0:2}));$((16#${rgb:2:2}));$((16#${rgb:4:2}))"
}
_color_bg() {
    hexs=$(_color_hex2rgb $1)
    echo "\[\e[48;2;${hexs}m\]"
}
_color_fg() {
    hexs=$(_color_hex2rgb $1)
    echo "\[\e[38;2;${hexs}m\]"
}
_color() {
    echo "$(_color_fg $1)$(_color_bg $2)"
}

_COLOR_CLEAR="\[\e[0m\]"
_COLOR_GOLD="\[\e[38;5;136m\]"
_COLOR_GREEN="\[\e[0;32m\]"
_COLOR_RED="\[\e[0;31m\]"
_COLOR_LO="$(_color 00aa00 002000)"
_COLOR_ME="$(_color dd0000 260e00)"
_COLOR_HI="$(_color ff0000 330000)"
_COLOR_RET_ERR="$_COLOR_RED"

_fh_prompt_git_stuff() {
    local branch
    local branch_color
    local git_status
    # ignore $HOME
    [[ $PWD == $HOME ]] && return
    # check if we're in a git repo
    # 4 ms on my box, recurses automatically
    git_status=$(git status -s 2>/dev/null)
    if [[ $? != 0 ]]; then
        return
    else
        branch=$(git branch | grep '^*' | sed s/\*\ //)
        [[ -z $branch ]] && branch='[NOBRANCH]'
        if [[ -z $git_status ]]; then
            branch_color="${_COLOR_GREEN}"
        else
            branch_color="${_COLOR_RED}"
        fi
        echo " ${branch_color}${branch}"
    fi
}

_fh_prompt_terraform() {
    local tf_env_file=$PWD/.terraform/environment
    [[ -f $tf_env_file ]] && echo " $_COLOR_GOLD[$(<$tf_env_file)]"
}

_fh_prompt_kubectl() {
    test -v KUBECONFIG && echo " $_COLOR_GOLD[$(kubectl config current-context)]"
}

_fh_prompt_jobs() {
    local i=0
    jobs -l | while read -r line; do
        let i+=1
        case $i in
        1)
            echo -n "$_COLOR_LO"
            ;;
        2)
            echo -n "$_COLOR_ME"
            ;;
        *)
            echo -n "$_COLOR_HI"
            ;;
        esac
        echo "$line$_COLOR_CLEAR"
    done
}

_fh_prompt() {
    local retcode=$?  # this must be first

    # user@host
    local host_name="${FH_PROMPT_HOST:-\h}"
    local host_color=$_COLOR_GOLD
    local host_prefix="\u@${host_color}${host_name}"

    # working directory
    local dir=" ${_COLOR_GREEN}\w"

    # non-zero exit
    local uid_color="${_COLOR_GOLD}"
    if [[ $retcode != 0 ]]; then
        uid_color="${_COLOR_RET_ERR}"
    fi
    local uid=" ${uid_color}\\\$${_COLOR_CLEAR}"

    # putting it all together
    PS1="${host_prefix}$(_fh_prompt_git_stuff)$(_fh_prompt_terraform)$(_fh_prompt_kubectl)${dir}${uid} ${_COLOR_CLEAR}"

    local job_prompt="$(_fh_prompt_jobs)"
    [[ -n "$job_prompt" ]] && PS1="${job_prompt}\n$_COLOR_CLEAR$PS1"


    # always append history
    history -a
}

PROMPT_COMMAND=_fh_prompt

# debug
# http://stackoverflow.com/questions/5014823/how-to-profile-a-bash-shell-script-slow-startup
# export PS4='â–¬ $(date "+.%N")\011 '
# source prompt

# vim: set ft=sh :
