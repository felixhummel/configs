#!/bin/bash
# Conventions:
# - if there's an EKS then there's a ~/.kube/${profile}.yml too
# - if $profile is "foo_dev", then switch to terraform workspace "dev"

# main function
# configures aws, kubectl and terraform
awsprofile() {
  local profile
  if [[ $# == 1 ]]; then
    profile=$1
  else
    profile=$(_list_awsprofiles | fzf)
  fi

  if [[ $profile == 'None' ]]; then
      echo "unsetting AWS_PROFILE and KUBECONFIG" >&2
      unset AWS_PROFILE
      unset KUBECONFIG
      return
  fi
  local env=$(echo $profile | cut -d_ -f2)

  export AWS_PROFILE=$profile

  local kubeconfig=~/.kube/${profile}.yml
  if [[ -f $kubeconfig ]]; then
    export KUBECONFIG=$kubeconfig
  else
    echo "WARNING: KUBECONFIG not found: $kubeconfig" >&2
  fi

  [[ -f .terraform/environment ]] \
    && [[ $(< .terraform/environment) != $env ]] \
    && terraform workspace select $env \
    || true
}

# list profiles from ~/.aws/credentials
_list_awsprofiles() {
  python3 <<'EOF'
import configparser
import pathlib
path = pathlib.PosixPath('~/.aws/config').expanduser()
config = configparser.ConfigParser()
config.read(path)
profiles = [x for x in config.sections() if x.startswith('profile')]
for x in sorted(profiles):
    print(x.split()[1])
EOF
}

# completion
_awsprofile()
{
  _script_commands=$(_list_awsprofiles)

  local cur prev
  COMPREPLY=()
  cur="${COMP_WORDS[COMP_CWORD]}"
  COMPREPLY=( $(compgen -W "${_script_commands}" -- ${cur}) )

  return 0
}
complete -o nospace -F _awsprofile awsprofile
